package rules;
import com.itegra.auditcom.domain.AlimentoAcordanteEntrada;
import com.itegra.auditcom.domain.ResultadoAlimentoAcordanteEntrada;
dialect  "mvel"

rule "optante"
    when
        obj: AlimentoAcordanteEntrada( ( percentualICMS == null || percentualICMS == 0.0 ) && ( crt == 1 || crt == 2 ))
        resultado : ResultadoAlimentoAcordanteEntrada( )
    then
        resultado.setSimplesNacional(true);
end

rule "nao optante"
    when
    	obj : AlimentoAcordanteEntrada( ( percentualICMS != null && percentualICMS != 0.0 )|| ( crt != 1 && crt != 2 && crt != null ))
    	resultado : ResultadoAlimentoAcordanteEntrada( )
    then
    	resultado.setSimplesNacional( false );
end

rule "Definir Regiao 1"
	when
		resultado : ResultadoAlimentoAcordanteEntrada( )
		obj : AlimentoAcordanteEntrada(  ufEmitente == "CE" )
	then
		resultado.setRegiaoEmitente( "INTERNO" );
end

rule "Definir Regiao 2"
	when
		resultado : ResultadoAlimentoAcordanteEntrada( )
		obj : AlimentoAcordanteEntrada( ufEmitente in ( "SP", "MG", "RJ", "PR", "SC", "RS" ) )
	then
		resultado.setRegiaoEmitente( "SUL_SUDESTE" );
end

rule "Definir Regiao 3"
	when
		resultado : ResultadoAlimentoAcordanteEntrada( )
		obj : AlimentoAcordanteEntrada( ufEmitente in ( "AC", "AL", "AP", "AM", "BA", "DF", "ES", "GO", "MA", "MS", "MT", "PA", "PB", "PE", "PI", "RN", "RO", "RR", "SE", "TO" ) )
	then
		resultado.setRegiaoEmitente( "OUTROS" );
end

rule "Definir Regiao 4"
	when
		resultado : ResultadoAlimentoAcordanteEntrada( )
		obj : AlimentoAcordanteEntrada( ufEmitente == null || ufEmitente not in ( "AC", "AL", "AP", "AM", "BA", "DF", "ES", "GO", "MA", "MS", "MT", "PA", "PB", "PE", "PI", "RN", "RO", "RR", "SE", "TO", "SP", "MG", "RJ", "PR", "SC", "RS", "CE", "EX" )  )
	then
		resultado.setMensagem( "UF emitente inválida." );
end

rule "Definir Regiao 5"
	when
		resultado : ResultadoAlimentoAcordanteEntrada( )
		obj : AlimentoAcordanteEntrada(  ufDestinatario == "CE" )
	then
		resultado.setRegiaoDestinatario( "INTERNO" );
end

rule "Definir Regiao 6"
	when
		resultado : ResultadoAlimentoAcordanteEntrada( )
		obj : AlimentoAcordanteEntrada( ufDestinatario in ( "SP", "MG", "RJ", "PR", "SC", "RS" ) )
	then
		resultado.setRegiaoDestinatario( "SUL_SUDESTE" );
end

rule "Definir Regiao 7"
	when
		resultado : ResultadoAlimentoAcordanteEntrada( )
		obj : AlimentoAcordanteEntrada( ufDestinatario in ( "AC", "AL", "AP", "AM", "BA", "DF", "ES", "GO", "MA", "MS", "MT", "PA", "PB", "PE", "PI", "RN", "RO", "RR", "SE", "TO" ) )
	then
		resultado.setRegiaoDestinatario( "OUTROS" );
end

rule "Definir Regiao 8"
	when
		resultado : ResultadoAlimentoAcordanteEntrada( )
		obj : AlimentoAcordanteEntrada( ufDestinatario == null || ufDestinatario not in ( "AC", "AL", "AP", "AM", "BA", "DF", "ES", "GO", "MA", "MS", "MT", "PA", "PB", "PE", "PI", "RN", "RO", "RR", "SE", "TO", "SP", "MG", "RJ", "PR", "SC", "RS", "CE", "EX" )  )
	then
		resultado.setMensagem( "UF destinatário inválida." );
end

rule "GuidedTipoProduto 1"
	when
		obj : AlimentoAcordanteEntrada( categoria == "2004" )
		resultado : ResultadoAlimentoAcordanteEntrada( )
	then
		resultado.setTipoProduto( "7%_CESTA_BASICA" );
end

rule "GuidedTipoProduto 2"
	when
		obj : AlimentoAcordanteEntrada( categoria == "2005" )
		resultado : ResultadoAlimentoAcordanteEntrada( )
	then
		resultado.setTipoProduto( "12%_CESTA_BASICA" );
end

rule "GuidedTipoProduto 3"
	when
		obj : AlimentoAcordanteEntrada( categoria == "2004" )
		resultado : ResultadoAlimentoAcordanteEntrada( )
	then
		resultado.setTipoProduto( "17%" );
end

rule "GuidedTipoProduto 4"
	when
		obj : AlimentoAcordanteEntrada( categoria == "2004" )
		resultado : ResultadoAlimentoAcordanteEntrada( )
	then
		resultado.setTipoProduto( "25%_VINHOS_SIDRAS_BEBIDASQUENTES" );
end

rule "GuidedTipoProduto 5"
	when
		obj : AlimentoAcordanteEntrada( categoria == null || categoria == "")
		resultado : ResultadoAlimentoAcordanteEntrada( )
	then
		resultado.setTipoProduto( "Categoria não informada" );
end

rule "GuidedTipoProduto 6"
	when
		obj : AlimentoAcordanteEntrada(( categoria != "2004" || categoria != "2005"|| categoria != "2001" || categoria != "2002" ))
		resultado : ResultadoAlimentoAcordanteEntrada( )
	then
		resultado.setTipoProduto( "Categoria desconhecida" );
end

rule "Regra Compor Base De Calculo 1"
	when
		obj : AlimentoAcordanteEntrada( )
		resultado : ResultadoAlimentoAcordanteEntrada( )
	then
		resultado.setValorBaseDeCalculo( obj.getValorItem() + obj.getValorIPI() + obj.getValorFrete() + obj.getValorSeguro() + obj.getValorOutros() );
end

rule "Regra Compor Base De Calculo 2"
	when
		obj : AlimentoAcordanteEntrada( ( cfop == 6151 || cfop == 6152 || cfop == 6155 || cfop == 6156 || cfop == 6408 || cfop == 6409 ) )
		resultado : ResultadoAlimentoAcordanteEntrada( regiaoEmitente not in ( "INTERNO", "EXTERIOR" ) )
	then
		resultado.setValorBaseDeCalculo( (obj.getValorItem() + obj.getValorIPI() + obj.getValorFrete() + obj.getValorSeguro() + obj.getValorOutros() ) * 1.3 );
end


rule "Definir Carga Liquida Base 1"
	when
		resultado : ResultadoAlimentoAcordanteEntrada( tipoProduto == "7%_CESTA_BASICA" && regiaoEmitente == "INTERNO" )
	then
		resultado.setPercentualCargaLiquida( 0.02 );
end

rule "Definir Carga Liquida Base 2"
	when
		resultado : ResultadoAlimentoAcordanteEntrada( tipoProduto == "7%_CESTA_BASICA" && regiaoEmitente == "SUL_SUDESTE" )
	then
		resultado.setPercentualCargaLiquida( 0.045 );
end

rule "Definir Carga Liquida Base 3"
	when
		resultado : ResultadoAlimentoAcordanteEntrada( tipoProduto == "7%_CESTA_BASICA" && regiaoEmitente == "OUTROS" )
	then
		resultado.setPercentualCargaLiquida( 0.035 );
end

rule "Definir Carga Liquida Base 4"
	when
		resultado : ResultadoAlimentoAcordanteEntrada( tipoProduto == "12%_CESTA_BASICA" && regiaoEmitente == "INTERNO" )
	then
		resultado.setPercentualCargaLiquida( 0.026 );
end

rule "Definir Carga Liquida Base 5"
	when
		resultado : ResultadoAlimentoAcordanteEntrada( tipoProduto == "12%_CESTA_BASICA" && regiaoEmitente == "SUL_SUDESTE" )
	then
		resultado.setPercentualCargaLiquida( 0.056 );
end

rule "Definir Carga Liquida Base 6"
	when
		resultado : ResultadoAlimentoAcordanteEntrada( tipoProduto == "12%_CESTA_BASICA" && regiaoEmitente == "OUTROS" )
	then
		resultado.setPercentualCargaLiquida( 0.044 );
end

rule "Definir Carga Liquida Base 7"
	when
		resultado : ResultadoAlimentoAcordanteEntrada( tipoProduto == "17%" && regiaoEmitente == "INTERNO" )
	then
		resultado.setPercentualCargaLiquida( 0.03 );
end

rule "Definir Carga Liquida Base 8"
	when
		resultado : ResultadoAlimentoAcordanteEntrada( tipoProduto == "17%" && regiaoEmitente == "SUL_SUDESTE" )
	then
		resultado.setPercentualCargaLiquida( 0.076 );
end

rule "Definir Carga Liquida Base 9"
	when
		resultado : ResultadoAlimentoAcordanteEntrada( tipoProduto == "17%" && regiaoEmitente == "OUTROS" )
	then
		resultado.setPercentualCargaLiquida( 0.06 );
end

rule "Definir Carga Liquida Base 10"
	when
		resultado : ResultadoAlimentoAcordanteEntrada( tipoProduto == "25%_VINHOS_SIDRAS_BEBIDASQUENTES" && regiaoEmitente == "INTERNO" )
	then
		resultado.setPercentualCargaLiquida( 0.056 );
end

rule "Definir Carga Liquida Base 11"
	when
		resultado : ResultadoAlimentoAcordanteEntrada( tipoProduto == "25%_VINHOS_SIDRAS_BEBIDASQUENTES" && regiaoEmitente == "SUL_SUDESTE" )
	then
		resultado.setPercentualCargaLiquida( 0.1620 );
end

rule "Definir Carga Liquida Base 12"
	when
		resultado : ResultadoAlimentoAcordanteEntrada( tipoProduto == "25%_VINHOS_SIDRAS_BEBIDASQUENTES" && regiaoEmitente == "OUTROS" )
	then
		resultado.setPercentualCargaLiquida( 0.1325 );
end

rule "GuidedAcrescentarCargaLiquidaNormadeExecucao"
	when
		obj : AlimentoAcordanteEntrada( normaExecucao == "1" )
		resultado : ResultadoAlimentoAcordanteEntrada( )
	then
		resultado.setPercentualCargaLiquida( resultado.getPercentualCargaLiquida()*1.05 );
end

rule "Acrescentar Carga Liquida Simples Nacional 1"
	when
		resultado : ResultadoAlimentoAcordanteEntrada( simplesNacional == true && regiaoEmitente == "INTERNO" )
	then
		resultado.setPercentualCargaLiquida( resultado.getPercentualCargaLiquida()*1.03 );
end

rule "Acrescentar Carga Liquida Simples Nacional 2"
	when
		resultado : ResultadoAlimentoAcordanteEntrada( simplesNacional == true && regiaoEmitente == "SUL_SUDESTE" )
	then
		resultado.setPercentualCargaLiquida( resultado.getPercentualCargaLiquida()*1.04 );
end

rule "Acrescentar Carga Liquida Simples Nacional 3"
	when
		resultado : ResultadoAlimentoAcordanteEntrada( simplesNacional == true && regiaoEmitente == "OUTROS" )
	then
		resultado.setPercentualCargaLiquida( resultado.getPercentualCargaLiquida()*1.06 );
end

rule "GuidedAcrescentarCargaLiquidaResolucao13 1"
	when
		resultado : ResultadoAlimentoAcordanteEntrada( simplesNacional == false && regiaoEmitente == "SUL_SUDESTE" )
		obj : AlimentoAcordanteEntrada( percentualICMS == 0.04 && ( cst.substring(0,0) == "1" || cst.substring(0,0) == "2" || cst.substring(0,0) == "3" || cst.substring(0,0) == "8" ))
	then
		resultado.setCalcularImposto( true );
		resultado.setPercentualCargaLiquida( resultado.getPercentualCargaLiquida()*1.0176 );
end

rule "GuidedAcrescentarCargaLiquidaResolucao13 2"
	when
		resultado : ResultadoAlimentoAcordanteEntrada( simplesNacional == false && regiaoEmitente == "OUTROS" )
		obj : AlimentoAcordanteEntrada( percentualICMS == 0.04 && ( cst.substring(0,0) == "1" || cst.substring(0,0) == "2" || cst.substring(0,0) == "3" || cst.substring(0,0) == "8" ))
	then
		resultado.setCalcularImposto( true );
		resultado.setPercentualCargaLiquida( resultado.getPercentualCargaLiquida()*1.047 );
end

rule "GuidedAcrescentarCargaLiquidaResolucao13 3"
	when
		resultado : ResultadoAlimentoAcordanteEntrada( simplesNacional == false )
		obj : AlimentoAcordanteEntrada( (cst == null || cst == "") || ( cst.substring(0,0) != "1" || cst.substring(0,0) != "2" || cst.substring(0,0) != "3" || cst.substring(0,0) != "8" ))
	then
		resultado.setCalcularImposto( true );
end

rule "GuidedAcrescentarCargaLiquidaResolucao13 4"
	when
	    resultado : ResultadoAlimentoAcordanteEntrada()
		obj : AlimentoAcordanteEntrada( cst == null || cst == "" )
	then
		resultado.setMensagem( "CST nao informado" );
end

rule "regra calcular imposto"
	when
		resultado : ResultadoAlimentoAcordanteEntrada( calcularImposto == true )
	then
		resultado.setValorImposto( resultado.getValorBaseDeCalculo() * resultado.getPercentualCargaLiquida() );
end
